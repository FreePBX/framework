{"version":3,"sources":["../../src/lib/Conf.js"],"names":["Conf","db","configs","init","resolve","reject","query","on","val","row","value","type","keyword","cached","load","then","Error"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,I;AACpB,eAAYC,EAAZ,EAAgB;AAAA;;AACf,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKD,EAAL,GAAUA,EAAV;AACA,OAAKE,IAAL,GAAY,KAAZ;AACA;;;;yBAEM;AAAA;;AACN,UAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAIC,QAAQ,MAAKL,EAAL,CAAQK,KAAR,CAAc,gCAAd,CAAZ;AACAA,UAAMC,EAAN,CAAS,QAAT,EAAmB,eAAO;AACzB,SAAIC,MAAMC,IAAIC,KAAd;AACA,SAAID,IAAIE,IAAJ,KAAa,MAAjB,EAAyB;AACxBH,YAAMC,IAAIC,KAAJ,KAAc,CAAd,GAAkB,IAAlB,GAAyB,KAA/B;AACA;AACD,WAAKR,OAAL,CAAaO,IAAIG,OAAjB,IAA4BJ,GAA5B;AACA,KAND,EAMGD,EANH,CAMM,KANN,EAMa,YAAM;AAClB,WAAKJ,IAAL,GAAY,IAAZ;AACAC,aAAQ,MAAKF,OAAb;AACA,KATD;AAUA,IAZM,CAAP;AAaA;;;2BAEqB;AAAA;;AAAA,OAAfW,MAAe,uEAAN,IAAM;;AACrB,OAAI,CAAC,KAAKV,IAAN,IAAc,CAACU,MAAnB,EAA2B;AAC1B,WAAO,sBAAY,UAACT,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAO,OAAKS,IAAL,GAAYC,IAAZ,CAAiB,UAACb,OAAD,EAAa;AACpCE,cAAQF,OAAR;AACA,MAFM,CAAP;AAGA,KAJM,CAAP;AAKA,IAND,MAMO;AACN,WAAO,kBAAQE,OAAR,CAAgB,KAAKF,OAArB,CAAP;AACA;AACD;;;sBAEGU,O,EAAwB;AAAA;;AAAA,OAAfC,MAAe,uEAAN,IAAM;;AAC3B,OAAI,CAACA,MAAL,EAAa;AACZ,WAAO,sBAAY,UAACT,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAKS,IAAL,GAAYC,IAAZ,CAAiB,UAACb,OAAD,EAAa;AAC7B,UAAG,OAAO,OAAKA,OAAL,CAAaU,OAAb,CAAP,KAAiC,WAApC,EAAiD;AAChDR,eAAQ,OAAKF,OAAL,CAAaU,OAAb,CAAR;AACA,OAFD,MAEO;AACNP,cAAO,IAAIW,KAAJ,CAAU,sBAAV,CAAP;AACA;AACD,MAND;AAOA,KARM,CAAP;AASA,IAVD,MAUO;AACN,QAAG,OAAO,KAAKd,OAAL,CAAaU,OAAb,CAAP,KAAiC,WAApC,EAAiD;AAChD,YAAO,kBAAQR,OAAR,CAAgB,KAAKF,OAAL,CAAaU,OAAb,CAAhB,CAAP;AACA,KAFD,MAEO;AACN,YAAO,kBAAQP,MAAR,CAAe,IAAIW,KAAJ,CAAU,sBAAV,CAAf,CAAP;AACA;AAED;AACD;;;;;;kBAtDmBhB,I","file":"Conf.js","sourcesContent":["import { Promise } from 'bluebird'\n\nexport default class Conf {\n\tconstructor(db) {\n\t\tthis.configs = {}\n\t\tthis.db = db\n\t\tthis.init = false\n\t}\n\n\tload() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar query = this.db.query('SELECT * FROM freepbx_settings')\n\t\t\tquery.on('result', row => {\n\t\t\t\tvar val = row.value\n\t\t\t\tif (row.type === \"bool\") {\n\t\t\t\t\tval = row.value !== 0 ? true : false\n\t\t\t\t}\n\t\t\t\tthis.configs[row.keyword] = val\n\t\t\t}).on('end', () => {\n\t\t\t\tthis.init = true\n\t\t\t\tresolve(this.configs)\n\t\t\t})\n\t\t})\n\t}\n\n\tgetAll(cached = true) {\n\t\tif (!this.init || !cached) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treturn this.load().then((configs) => {\n\t\t\t\t\tresolve(configs)\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\treturn Promise.resolve(this.configs)\n\t\t}\n\t}\n\n\tget(keyword, cached = true) {\n\t\tif (!cached) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.load().then((configs) => {\n\t\t\t\t\tif(typeof this.configs[keyword] !== \"undefined\") {\n\t\t\t\t\t\tresolve(this.configs[keyword])\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('configs is undefined'))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tif(typeof this.configs[keyword] !== \"undefined\") {\n\t\t\t\treturn Promise.resolve(this.configs[keyword])\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new Error('configs is undefined'))\n\t\t\t}\n\n\t\t}\n\t}\n}\n"]}